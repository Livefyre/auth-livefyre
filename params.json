{"name":"Auth-livefyre","tagline":"auth plugin and delegate for Livefyre","body":"# Livefyre Auth\r\n\r\n`auth-livefyre` provides a series of modules for helping with Authentication\r\nin Livefyre-powered Applications.\r\n\r\n## `.plugin(auth)`\r\n\r\nPlug in to an instance of [`auth`](https://github.com/Livefyre/auth)\r\n\r\n`auth` allows apps to publish and subscribe to login events, and to trigger\r\nauth-related actions separately from how the web page operator delegates the\r\nimplementaiton details of their log in flow.\r\n\r\nThe plugin will watch for 'authenticate' events on auth that have Livefyre\r\ncredentials, and it will then try to authenticate them and log the user in with\r\n`auth.login({ livefyre: user })`\r\n\r\nIt will also load a user from session on page load, and clear the session\r\non `auth` `logout` events.\r\n\r\n```javascript\r\nrequire('livefyre-auth').plugin(auth);\r\n```\r\n\r\nNote: To create a delegate for a non-production cluster, you'll need to pass the\r\n`serverUrl` as a second parameter to `.plugin`\r\n\r\n```javascript\r\nrequire('livefyre-auth').plugin(auth, 'uat.livefyre.com');\r\n```\r\n\r\n## `.createDelegate(serverUrl)`\r\n\r\nCreate an `auth` delegate object to be passed to `auth.delegate()`.\r\nThis will configure auth to be controlled by Livefyre.com accounts and profiles.\r\nLivefyre Enterprise customers will rarely use this.\r\n\r\n```javascript\r\nvar livefyreAuthDelegate = require('auth-livefyre').createDelegate('http://livefyre.com');\r\n\r\nauth.delegate(livefyreAuthDelegate);\r\n\r\n// This would launch a Livefyre.com login window\r\nauth.login();\r\n```\r\n\r\n## `.fetchUser(credentials, errback)`\r\n\r\nFetch a LivefyreUser from the AuthAPI.\r\n\r\n```javascript\r\nvar livefyreAuth = require('auth-livefyre');\r\nvar authCredentials = {\r\n    serverUrl: 'http://livefyre.com',\r\n    token: 'lol'\r\n};\r\nlivefyreAuth.fetchUser(authCredentials, function (err, user, userInfo) {\r\n    // do\r\n});\r\n```\r\n\r\n## `.User`\r\n\r\nCreate a Livefyre User model. It is rare that you'd create this directly.\r\nCheck out `.fetchUser()`.\r\n\r\n## `.api`\r\n\r\nFetch the Livefyre Auth API.\r\n\r\nUse `.updateUser(user, data)` to update a LivefyreUser\r\nfrom the auth api response data\r\n\r\n```javascript\r\nvar authApi = require('auth-livefyre').api;\r\n\r\nauthApi(opts, function (err, userInfo) {\r\n    if (err) {\r\n        return errback(err);\r\n    }\r\n    var user = new LivefyreUser();\r\n    authApi.updateUser(user, userInfo);\r\n});\r\n```\r\n\r\n### `.session`\r\n\r\nHelpers for dealing with the Livefyre User session\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}